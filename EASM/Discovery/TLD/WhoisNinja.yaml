config:
  name: "Reverse Whois Ninja"
  author: "Rikunj Sindhwad"
  usage: "./TaskNinja -w WhoisNinja.yaml -v whoisAPI=at_iGSKrT*****jIXDg5,org_list=org_list.txt,phone_list=phone_list.txt,email_list=email_list.txt,domain_list=domain_list.txt,RESULT=Final Result Path"
  shell: "/bin/bash"
  # stdoutDir: logs
  # stderrDir: logs
vars:
  whoisAPI: ""
  org_list: ""
  phone_list: ""
  email_list: ""
  domain_list: ""
  HIVE: "hive"
  INPUT_DIR: "hive/in"
  OUTPUT_DIR: "hive/out"
  whoisninja: "robensive/whoisninja:latest"
  dockerinput: "/hive/in"
  dockeroutput: "/hive/out"
  dockercmd: "docker container run --rm -v $(pwd)/hive:/hive"
  RESULT: "" # Modify final list name

tasks:
  - name: Validate Requirements
    silent: false
    parallel: false
    stoponerr: true
    cmds:
      - programs=("docker" "grep" "cp" "sudo" "sort" "jq" "find" "cat")
      - for program in "${programs[@]}"; do command -v "$program" >/dev/null 2>&1 || { echo >&2 "$program is not installed."; exit 1;}; done
  - name: Make Required Directories
    silent: true
    parallel: false
    stoponerr: true
    cmds:
      - rm -rf {{OUTPUT_DIR}} {{INPUT_DIR}}
      - mkdir -p {{OUTPUT_DIR}} {{INPUT_DIR}}
  - name: Copy Input Files
    silent: true
    parallel: false
    stoponerr: true
    cmds:
      - cp {{org_list}} {{INPUT_DIR}}/org_list.txt
      - cp {{phone_list}} {{INPUT_DIR}}/phone_list.txt
      - cp {{email_list}} {{INPUT_DIR}}/email_list.txt
      - cp {{domain_list}} {{INPUT_DIR}}/domain_list.txt
  - name: Get Domains From ORG List
    silent: true
    parallel: true
    cmds:
      - mkdir -p {{OUTPUT_DIR}}/ORG
      - \{{dockercmd}} {{whoisninja}} --api_key {{whoisAPI}} --org_list {{dockerinput}}/org_list.txt --output {{dockeroutput}}/ORG/domains.txt
  - name: Get Domains From Phone List
    silent: true
    parallel: true
    cmds:
      - mkdir -p {{OUTPUT_DIR}}/Phone
      - \{{dockercmd}} {{whoisninja}} --api_key {{whoisAPI}} --phone_list {{dockerinput}}/phone_list.txt --output {{dockeroutput}}/Phone/domains.txt
  - name: Get Domains From Email List
    silent: true
    parallel: true
    cmds:
      - mkdir -p {{OUTPUT_DIR}}/Email
      - \{{dockercmd}} {{whoisninja}} --api_key {{whoisAPI}} --email_list {{dockerinput}}/email_list.txt --output {{dockeroutput}}/Email/domains.txt
  - name: Get Domains From Domain List
    silent: true
    parallel: true
    cmds:
      - mkdir -p {{OUTPUT_DIR}}/Domain
      - \{{dockercmd}} {{whoisninja}} --api_key {{whoisAPI}} --domain_list {{dockerinput}}/domain_list.txt --output {{dockeroutput}}/Domain/domains.txt
  - name: Merge Results
    silent: false
    parallel: false
    required:
      - Get Domains From ORG List
      - Get Domains From Phone List
      - Get Domains From Email List
      - Get Domains From Domain List
    cmds:
      - mkdir -p {{OUTPUT_DIR}}/WhoisNinja
      - find {{OUTPUT_DIR}} -name "domains.txt" -exec cat {} \; | sort -u > {{OUTPUT_DIR}}/WhoisNinja/domains.txt
      - echo Total-Domains-Identified:$(cat {{OUTPUT_DIR}}/WhoisNinja/domains.txt | wc -l)
